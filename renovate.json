{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ],
  "enabledManagers": ["regex"],

  "packageRules": [
    {
      "matchDatasources": ["custom.tool-GitVersioning", "custom.tool-testtool"],
      "additionalBranchPrefix": "tools-1",
      "groupName": "tools",
      "versioning": "regex:appVersion: (?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)"
    },
    {
      "matchDatasources": ["custom.tool-GitVersioning", "custom.tool-testtool"],
      "groupName": "tools-2",
      "versioning": "regex:appVersion: (?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)"
    }
  ],

  "regexManagers": [
    {
      "description": "Update HCL Plugins",
      "fileMatch": [".hcl$"],
      "matchStrings": [
        "revision =\\s\"(?<currentValue>.*\\d)"
      ],
      "datasourceTemplate": "github-releases",
      "packageNameTemplate": "TOwens1987/GitVersioning",
      "depNameTemplate": "GitVersioning Update",
      "extractVersionTemplate": "^(?<version>.*)$",
      "versioningTemplate": "semver"
    }
  ],

  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": ["toolVersions.adoc$"],
      "datasourceTemplate": "custom.tool-{{depName}}",
      "matchStrings": [
        "\\s*(?<depName>.*)\\n\\s*(?<currentValue>.*)"
      ],
      "packageNameTemplate": "releases",
      "extractVersionTemplate": "(?<version>appVersion: (?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+))$"
    }
  ],
  "customDatasources": {
    "tool-GitVersioning": {
      "defaultRegistryUrlTemplate": "https://raw.githubusercontent.com/TOwens1987/GitVersioning/main/chart.yaml",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": [$map($filter(releases, function($v) {$contains($v.version, /^appVersion:/)}), function($v) {$v})]}\n"
      ]
    },
    "tool-testtool": {
      "defaultRegistryUrlTemplate": "https://raw.githubusercontent.com/TOwens1987/testtool/main/chart.yaml",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": [$map($filter(releases, function($v) {$contains($v.version, /^appVersion:/)}), function($v) {$v})]}\n"
      ]
    }
  }
}
