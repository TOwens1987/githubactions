name: Create New Tag

on:
  workflow_call:
  push:
  pull_request:
    types: [opened, closed, synchronize]
jobs:
  Tagging:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Determine Default Bump
        id: determine-bump
        run: |
          if [[ "${{ (contains(github.event.pull_request.labels.*.name, 'feature') || (github.head_ref == 'release/dev')) }}" ]]; then
            echo "DEFAULT_BUMP=minor" >> "$GITHUB_ENV" 
          else
            echo "DEFAULT_BUMP=patch" >> "$GITHUB_ENV"
          fi
        env:
          DEFAULT_BUMP: "${{ steps.determine-bump.outputs.stdout }}"

      - name: Determine Default dry-run
        id: determine-run
        run: |
          if [[ "${{ ((github.head_ref == 'release/dev' && github.event.action == 'opened')) || (github.event.pull_request.merged == true)   }}" ]]; then
            echo "DEFAULT_RUN=false" >> "$GITHUB_ENV"
          else
            echo "DEFAULT_RUN=true" >> "$GITHUB_ENV"
          fi
        env:
          DEFAULT_RUN: ${{ steps.determine-run.outputs.stdout }}

      - name: Create Tag
        id: create-tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.DEFAULT_BUMP }}
          create_annotated_tag: true
          tag_prefix: ""
          dry_run: ${{ env.DEFAULT_RUN }}

      - name: Determine default tag to use
        id: determine-tag
        run: |
          if [[ "${{ (github.head_ref == 'release/dev' && github.event.action == 'synchronize') }}" ]]; then
            echo "DEFAULT_TAG=steps.determine-tag.outputs.previous_tag" >> "$GITHUB_ENV"
          else
            echo "DEFAULT_TAG=steps.determine-tag.outputs.new_tag" >> "$GITHUB_ENV"
          fi
        env:
          DEFAULT_TAG: ${{ steps.determine-tag.outputs.stdout }}

      - name: GitHub Release Creation and Monitoring
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.DEFAULT_TAG }}
          name: Release ${{ env.DEFAULT_TAG }}
          body: ${{ github.event.pull_request.body }}
          allowUpdates: "true"
          prerelease: ${{ env.DEFAULT_RUN }}
          updateOnlyUnreleased: "true"
